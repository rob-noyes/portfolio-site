
  {
    "projects": {
      "project": [
        { 
          "id": "myrewind",
          "title": "My Rewind",
          "githubhref": "https://github.com/rob-noyes/myrewind",
          "description":
            "Movies have always been a favorite hobby of mine to watch, and I have found that the big sites to look up information about them are bloated and have too many ads pushed towards you. MyRewind is a creation out of passion for cinema lovers like myself, to allow for quick and easy access to the details of a movie without the bloat of ads or slow responsiveness.",

          "imgSrc": "/images/projects/myRewind/wide.png",
          "imgSrcSmall": "/images/projects/myRewind/myrewindhomepage.png",
          "imgSrcSmall2": "/images/projects/myRewind/myrewindMoviePage.png",
          "imgDesc": "Home page & Movie page",
          "imgDescSmall": "Homepage",
          "imgDescSmall2": "Movie Page",
          "learning1":
            "This project was one of the largest I have worked on, and something that will continue to be developed. That hardest lesson here was utilizing the APIs to display the data, and how to use state management with react-router-dom, as well as useEffect with the API. The biggest success was getting the search to work with the movie API, as it was difficult to get the movie ID to match when clicking on a specific movie.",
          "learning2":
            "This was a breakthrough for me understanding CSS on a deeper level. I utilized Figma as a way to learn how to develop my style and UI before delving into the project code. TailwindCSS also came in handy here as it made it so much easier to inject the JSX with tailwind, keeping everything within the component files instead of moving to a stylesheet and utilizing specific classes.",
          "features": [
            "Browse Top Rated, Upcoming, and Popular movies on the home page.",
            "Each movie has its own dedicated page with details and credits, just click on the title or image.",
            "Search any movie within the database to see a more in depth look with search icon.",
            "Check out lists of Top Rated and Now playing Movies on unique pages using hamburger menu.",
            "Responsive mobile-first design approach, working on phones, tablets, and desktops."
          ],
          "skills": [
            "Javascript",
            "React",
            "React-router-dom",
            "React-icons",
            "API - TMDB",
            "TailwindCSS",
            "NPM/Webpack",
            "Git/Github",
            "Framer Motion"
          ],
          "demo": "https://myrewind.netlify.app/"
      },

      {
        "id": "room",
          "title": "Room Design",
          "githubhref": "https://github.com/rob-noyes/room-homepage",
          "description":
            "Room is an ecommerce website, allowing users to browser a handful of items that can be added to a cart, as well as looking at the cart for checkout.",

          "imgSrc": "/images/projects/room/roomWide.png",
          "imgSrcSmall": "/images/projects/room/desktop1.png",
          "imgSrcSmall2": "/images/projects/room/desktop2.png",
          "imgDesc": "Home page & Shop Page",
          "imgDescSmall": "Homepage",
          "imgDescSmall2": "Shop Page",
          "learning1":
            "During this project I learned about React and how to destructure into working components. I used react-router-dom to allow for linking to other pages on the site, and to get a better grasp on how to reuse components (i.e header for similar looks on each page). I used useState as well to further my learning into states and how to pass them down into components, especially with functions utilizing state changes. I also learned more aobut higher order function utilization as I needed to map through arrays and filter out specific object ids for a shopping cart.",
          "learning2":
            "With TailwindCSS I learned about extending the TailwindCSS config file, allowing for unique styles to be made that aren't just the base styles given. It it also my first site using completely TailwindCSS, which has given me a better unterstanding of how quick and easy it can be to style and create responsive pages. The utility first approach. really makes sense to me with the ability to change things so quickly straight from the HTMl (or JSX) in my case.",
          "features": [
            "List of items for sale with description, image, and add to cart button.",
            "Shopping Cart functional and usable for adding items.",
            "Transitions to images and descriptions on main page.",
            "Responsive mobile-first design approach, working on phones, tablets, and desktops",
            "Links to seperate 'pages' within a Single Page Applications"
          ],
          "skills": [
            "Javascript",
            "React",
            "React-router-dom",
            "Local JSON files",
            "TailwindCSS",
            "NPM/Webpack",
            "Git/Github"
          ],
          "demo": "https://rob-noyes.github.io/room-homepage/"
      },
      
      {
        "id": "tipjar",
          "title": "Tipjar",
          "githubhref": "https://github.com/rob-noyes/tip-jar",
          "description":
            "We've all been there, looking at the check and trying to figure out what to tip. Espeically in the pandemic times, we want to go above and beyond for the service industry workers.  This app is made from someone who has worked in the service industry in the past and knows its hardships. By having a simple layout of inputting your total, you can simply click or tap the percentage you want to give, or put in a custom precentage as well.",

          "imgSrc": "/images/projects/tipjar/tipjarWide.png",
          "imgSrcSmall": "/images/projects/tipjar/tipjar.png",
          "imgSrcSmall2": "/images/projects/tipjar/tipjarMobile.png",
          "imgDesc": "Desktop & Mobile",
          "imgDescSmall": "Desktop",
          "imgDescSmall2": "Mobile",
          "learning1":
            "This app was made using Reactjs and TailwindCSS. Both of these were the first time I have completed a solo project using them. Within React I was focusing on learning hooks and useState to help make the application run smooth while also having an organized codebase. By utilizing TailwindCSS I was able to quickly produce the CSS side, and found that it is a quicker method to create and adapt an app.",
          "learning2":
            "With TailwindCSS I learned about extending the TailwindCSS config file, allowing for unique styles to be made that aren't just the base styles given. It it also my first site using completely TailwindCSS, which has given me a better unterstanding of how quick and easy it can be to style and create responsive pages. The utility first approach. really makes sense to me with the ability to change things so quickly straight from the HTMl (or JSX) in my case.",
          "features": [
            "Type in bill amount in dollars to find the tip amount.",
            "Select a specific tip percentage, or put in a custom percent.",
            "Allows for multiple people as way to split the check and tip alike.",
            "Responsive mobile-first design approach, working on phones, tablets, and desktops"
          ],
          "skills": [
            "Javascript",
            "React",
            "React-router-dom",
            "Local JSON files",
            "TailwindCSS",
            "NPM/Webpack",
            "Git/Github"
          ],
          "demo": "https://rob-noyes.github.io/tip-jar/"
      }

      
    ]
  }
}
